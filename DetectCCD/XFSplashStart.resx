<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit2.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQCAMAAABF6+6qAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAL6UExURQddmwABAQBTlQBUlgVcmwNamgBYmPz9/gBWlyx1qgMFBsXY5wRamv7+/gBNkiOOzhqJ
        zRYYGgZdmw8QEmWZwazI3ajG3A9hnvLy8v39/dnZ2hQWFwBXmAoLDOnw9hVloez0+mmcwvj4+AcICgpe
        nAJZmRkaHJSUlR8hIlJTVPf392JjZPPz8/T09A0OEPz8/HNzdNTi7QZcm4KszOTk5DN5rSkqLB0eIIGB
        gqbE2z9BQjIzNPX4+1laXElKS83NzeHq8ldYWcXFxr3d8BeIzLHL3+fn5zAxMmGWvkGCsru7uzY3Nywt
        L21ubnBxcvv7++7u7uHh4mVmZ9TU1bm5ul1eX6rS7A2Cytzc3Ovr7EVGR5CRknl5eq+wsKGhosHW5mts
        bfr6+iRvp8vLyzo8Pc/P0JmZmk9QUhITFCFtpcPDxMHBwXypytfX2N7e3vj6/Nnr946PkCUmJyIjJQBU
        lfb29U1OT+jv9SyS0bjQ4oyz0F2TvT0+P9LS0s3d6vv8/VOm2d/f31aQu8rKy2doaXe54Zq81vL2+XZ3
        eH1+fr29vtPT03O34MjIyfX19aanqF9gYXt8fbW1ticoKrXO4UeGtVGMubKys+np6Y2OjhxqpK2trujo
        6EhISnmnyaqqqtrm8Hp7fIuLjEJDRFZWVzSX0u3t7cbh89/u+ISFhmlqazc4OYmxz5bI6Li4uT2AsX5/
        gJydnuXm5r+/v+Xt9aioqbrb8AJYmEyJt5qbnJaXmP3+/tjl725vcMbZ6IyMjaWlpqSkpIOEhBloonOi
        xtDQ0ImJioXA5JKUlN3o8dXp9piYmZ6foN3d3snJygZdnKOjpPn5+aHO6sfHyBOGy3m64SdyqPz8/fr5
        +oiIieDg4bGysmyz39jY2YeHiI+QkeHv+Le3uPDw8PH4/KTD2k+LuKLA2bfa73elyPb19cnKytvs99zt
        9+rq6uTx+aK/2Nro8o3D5pOTlN3e3nC135C10mOu3P7+/Qdcm/79/fz9/cLf8X+Agf///7tcg4AAAAAZ
        dEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAANFUlEQVR4Xu3bd3QVVQLH8cxLguGZEEJI
        AgmhBVJI6C0Q6UjvgtKLICBIL4K0RYo0qSpdpLr23nvvrnXX3tftvZd7zt47M2m4/rFnz89z3vH7+SNv
        7p3Bv75n5r77xjgDCBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQ
        FiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGC
        sCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsS
        hAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQ
        ICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKC
        BGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAW
        JAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKw
        IEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKE
        BQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIEYUGCsCBBWJAg
        LEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYkCAsShAUJwoIE
        YUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAgQViQICxIEBYk
        CAsShAUJwoIEYUGCsCBBWJAgLEgQFiQICxKEBQnCggRhQYKwIEFYkCAsSBAWJAgLEoQFCcKCBGFBgrAg
        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
</value>
  </data>
</root>